"use strict";(self.webpackChunkapollo_testing_toolkit_link_docs=self.webpackChunkapollo_testing_toolkit_link_docs||[]).push([[856],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=o.createContext({}),u=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,k=d["".concat(c,".").concat(m)]||d[m]||s[m]||r;return n?o.createElement(k,l(l({ref:t},p),{},{components:n})):o.createElement(k,l({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var u=2;u<r;u++)l[u]=n[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2110:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var o=n(3117),i=n(102),r=(n(7294),n(3905)),l=["components"],a={id:"how-to-install",title:"How to install in your project",sidebar_label:"How to install in your project",custom_edit_url:null,hide_title:!0},c="How to install in your project",u={unversionedId:"how-to-install",id:"how-to-install",isDocsHomePage:!1,title:"How to install in your project",description:"You'll likely want to load the link conditionally, so that it is not downloaded by your clients.",source:"@site/docs/how-to-install.md",sourceDirName:".",slug:"/how-to-install",permalink:"/docs/how-to-install",editUrl:null,tags:[],version:"current",frontMatter:{id:"how-to-install",title:"How to install in your project",sidebar_label:"How to install in your project",custom_edit_url:null,hide_title:!0},sidebar:"default",previous:{title:"Readme",permalink:"/docs/api/"},next:{title:"ApolloTestingToolkit",permalink:"/docs/api/modules/ApolloTestingToolkit"}},p=[{value:"Customizing loading of the link",id:"customizing-loading-of-the-link",children:[],level:3},{value:"What can I import from the module?",id:"what-can-i-import-from-the-module",children:[],level:2},{value:"What next?",id:"what-next",children:[],level:2}],s={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-install-in-your-project"},"How to install in your project"),(0,r.kt)("p",null,"You'll likely want to load the link conditionally, so that it is not downloaded by your clients.\nInclude the link wherever you like in your chain, however I recommend putting it right before the connection with the backend occurs for most accurate results."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { createLazyLoadableTestingToolkitLink } from 'apollo-testing-toolkit-link'\n\nconst apolloClient = new ApolloClient({\n  link: ApolloLink.from([\n    new YourCustomLink(),\n    ...(process.env.NODE_ENV === 'development'\n      ? [\n          createLazyLoadableTestingToolkitLink({\n            clientName: 'your-client-name',\n            startLoggingImmediately: true,\n          }),\n        ]\n      : []),\n    new HttpLink(/* ... */),\n  ]),\n  // ...\n})\n")),(0,r.kt)("h3",{id:"customizing-loading-of-the-link"},"Customizing loading of the link"),(0,r.kt)("p",null,"By default, link is lazily loaded and if you use webpack, split into a seaprate chunk by utilizing the ",(0,r.kt)("inlineCode",{parentName:"p"},"createLazyLoadableLink")," function provided in the package."),(0,r.kt)("p",null,"You may customize this behavior. This is the default behavior:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { createLazyLoadableLink } from 'apollo-testing-toolkit-link'\n\n/**\n * @param {{clientName: string}} options\n */\nexport const createLazyLoadableTestingToolkitLink = (options) =>\n  createLazyLoadableLink(\n    import(\n      'apollo-testing-toolkit-link' /* webpackChunkName: 'apolloTestingToolkitLink' */\n    ).then(({ createInterceptingLink }) => createInterceptingLink(options)),\n  )\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"webpackChunkName")," magic comment will ensure a separate chunk is file created for the link (if you're using webpack)."),(0,r.kt)("h2",{id:"what-can-i-import-from-the-module"},"What can I import from the module?"),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules"},"API reference"),"."),(0,r.kt)("h2",{id:"what-next"},"What next?"),(0,r.kt)("p",null,"Read about how to use the library in ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules/ApolloTestingToolkit"},"ApolloTestingToolkit"),"."))}d.isMDXComponent=!0}}]);